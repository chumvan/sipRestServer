version: '3'

services:
  publisher:
    image: pub:latest
    container_name: publisher
    depends_on:
      - postgresDB
      - confTopicMapper
      - server
    environment:
      - PUBLISHER_RTP_PORT
      - PUBLISHER_SIP_PORT
      - FORWARDER_RTP_IN_PORT
      - FORWARDER_IP
      - PUBLISHER_IP
      - SERVER_SIP_IP
      - SERVER_SIP_PORT
      - FACTORY_CLIENT_PORT
      - CONF_FACTORY_PORT
      - SERVER_IP=$SERVER_SIP_IP
      - SERVER_PORT=$SERVER_SIP_PORT
      - SENDER_IP=$PUBLISHER_IP
      - SENDER_PORT=$PUBLISHER_SIP_PORT
      - SENDER_NAME=$PUBLISHER_NAME
    ports:
      - "${PUBLISHER_RTP_PORT}:${PUBLISHER_RTP_PORT}/udp"
      - "${PUBLISHER_SIP_PORT}:${PUBLISHER_SIP_PORT}"
      - 6658:6658
    networks:
      pubsubnet:
        ipv4_address: ${PUBLISHER_IP}
    stdin_open: true
    tty: true
  
  server:
    image: server:latest
    container_name: server
    depends_on:
      - postgresDB
      - confTopicMapper
    environment:
      - SERVER_SIP_IP
      - SERVER_SIP_PORT
      - CONF_FACTORY_PORT
      - CLIENT_REST_PORT
      - FORWARDER_IP
      - FORWARDER_RTP_IN_PORT
      - CONF_TOPIC_MAPPER_IP
      - CONF_TOPIC_MAPPER_PORT
    ports:
      - "${CONF_FACTORY_PORT}:${CONF_FACTORY_PORT}"
      - "${SERVER_SIP_PORT}:${SERVER_SIP_PORT}"
      - "${CLIENT_REST_PORT}:${CLIENT_REST_PORT}"
    networks:
      pubsubnet:
        ipv4_address: ${SERVER_SIP_IP} 

  postgresDB:
    image: postgres
    container_name:  postgresDB
    restart: always
    environment:
      - POSTGRES_IP
      - POSTGRES_PORT
      - POSTGRES_PASSWORD=password
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      pubsubnet:
        ipv4_address: ${POSTGRES_IP}
  
  
  confTopicMapper:
    image: confdb:latest
    container_name: confTopicMapper
    depends_on:
      - postgresDB
    restart: on-failure
    environment:
      - FORWARDER_IP
      - FORWARDER_RTP_IN_PORT
      - CONF_TOPIC_MAPPER_IP
      - CONF_TOPIC_MAPPER_PORT
      - DB_HOST=postgresDB
    ports:
      - "${CONF_TOPIC_MAPPER_PORT}:${CONF_TOPIC_MAPPER_PORT}"
    networks:
      pubsubnet:
        ipv4_address: $CONF_TOPIC_MAPPER_IP 

  topic:
    image: topic:latest
    container_name: topic
    depends_on:
      - confTopicMapper
      - server
    restart: on-failure
    environment:
      - FORWARDER_IP
      - FORWARDER_RTP_IN_PORT
      - FORWARDER_RTP_OUT_PORT
      - FORWARDER_REST_PORT
      - SUBSCRIBER1_IP
      - SUBSCRIBER1_RTP_PORT
      - SUBSCRIBER2_IP
      - SUBSCRIBER2_RTP_PORT
      - SUBSCRIBER3_IP
      - SUBSCRIBER3_RTP_PORT
    ports:
      - ${FORWARDER_REST_PORT}:${FORWARDER_REST_PORT}
      - ${FORWARDER_RTP_IN_PORT}:${FORWARDER_RTP_IN_PORT}
      - ${FORWARDER_RTP_OUT_PORT}:${FORWARDER_RTP_OUT_PORT}
    networks:
      pubsubnet:
        ipv4_address: $FORWARDER_IP    



networks:
  pubsubnet:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${SUBNET}
          gateway: ${GATEWAY}

volumes:
  postgres_data:
